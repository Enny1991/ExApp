apply plugin: 'com.android.model.application'

model {
    android {
        compileSdkVersion = 22
        buildToolsVersion = "22.0.1"

        defaultConfig.with {
            applicationId = "com.eneaceolini.exapp"
            minSdkVersion.apiLevel = 15
            targetSdkVersion.apiLevel = 22
            versionCode = 1
            versionName = "1.0"

        }

    }

    android.ndk {
        moduleName = "fftw_jni"
    }

    android.sources {
        main {
            jni {
                source {
                    srcDir 'src'
                }
            }
        }
    }

    android.buildTypes {
        release {
            minifyEnabled = false
            applicationIdSuffix = '.release'
            proguardFiles += file('proguard-rules.pro')
            ndk.with {
                debuggable = true
            }
        }
        debug{
            applicationIdSuffix = '.debug'
            proguardFiles += file('proguard-rules.pro')
        }
    }

    android.productFlavors {
        create("flavour1"){
            applicationId = 'com.eneaceolini.exapp'

        }
        create("x86") {
            applicationId = 'com.eneaceolini.exapp'

            ndk.with{
                abiFilters += "x86"
            }
        }
        create("arm") {
            applicationId = 'com.eneaceolini.exapp'
            ndk.with{
                abiFilters += "armeabi-v7a"
            }
        }
        create("fat") {
            applicationId = 'com.eneaceolini.exapp'
            // If ndk.abiFilters is not configured, the application
            // compile and package all suppported ABI.
        }


    }
    components.android {
        binaries.afterEach { binary ->
            binary.mergedNdkConfig.cppFlags.add(
                    "-DVARIANT=\"" + binary.name + "\"")
        }
    }


}

task nativeLibsToJar(type: Zip, description: 'create a jar archive of the native libs') {
    destinationDir file("$buildDir/native-libs")
    baseName 'native-libs'
    extension 'jar'
    from fileTree(dir: 'libs', include: '**/*.so')
    into 'lib/'
}

tasks.withType(JavaCompile) {
    compileTask -> compileTask.dependsOn(nativeLibsToJar)
}

dependencies {
    compile files('libs/d2xx.jar')
    compile files('libs/musicg-1.4.2.0.jar')
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:appcompat-v7:22.2.0'
    compile 'com.androidplot:androidplot-core:0.6.1'
    compile fileTree(dir: "$buildDir/native-libs", include: 'native-libs.jar')
}
